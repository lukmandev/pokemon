{"version":3,"sources":["http/api.js","utils/locaStorage.js","redux/reducers/favouriteList.js","redux/reducers/simpleModal.js","redux/reducers/pokemons.js","redux/reducers/deletePokemon.js","components/card/item.js","components/card/loadItem.js","components/cardOutMessage.js","components/pokemonsOutBlock.js","components/favouritePokemonsBlock.js","components/input.js","redux/reducers/form.js","components/addPokemonForm.js","components/confirmDeleteModal.js","components/simpleModal.js","App.js","reportWebVitals.js","redux/reducer.js","index.js"],"names":["api","axios","create","baseURL","localStorageKey","initialState","favouriteList","key","result","localStorage","getItem","JSON","parse","e","getByKey","data","dataLoaded","dataHasError","fetchToFavouriteList","createAsyncThunk","payload","a","dispatch","getState","setDataError","setDataLoaded","responseData","post","setData","pokemons","createSlice","name","reducers","setFavouriteList","state","action","actions","simpleModal","isActive","message","setModalActive","setMessage","fetchPokemons","userId","get","setRefetch","refetch","extraReducers","deletePokemonById","id","setIsLoading","_id","deletePokemon","deletePokemonId","delete","setSimpleModalMessage","setSimpleModalActive","setConfirmDelete","setDeletePokemonId","modalIsActive","confirmDelete","isLoading","Card","item","useState","img","setImg","title","imgAlt","setImgAlt","useDispatch","useSelector","className","style","width","onError","src","alt","description","onClick","list","height","memo","CardLoad","CardOutMessage","Pokemons","React","useEffect","length","map","elem","Array","fill","i","FavouritePokemons","setItem","stringify","Input","label","props","useField","field","meta","type","touched","error","addPokemon","setLoading","form","AddPokemonForm","formState","validation","Yup","required","initialValues","validationSchema","onSubmit","values","resetForm","handleSubmit","ConfirmDeleteModal","modalState","find","el","tabIndex","role","SimpleModal","offModal","setTimeout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","middleware","getDefaultMiddleware","app","ReactDOM","render","document","getElementById"],"mappings":"sNASeA,E,OALHC,EAAMC,OAAO,CACxBC,QAAS,SCHJC,EAAkB,gBCIlBC,EAAe,CACnBC,cDHe,SAACC,GACjB,IAAMC,EAASC,aAAaC,QAAQN,GACpC,IAAGI,EAYF,MAAO,GAXP,IACC,IAEC,OADaG,KAAKC,MAAMJ,GAEvB,MAAMK,GACP,MAAO,IAEP,MAAMA,GACP,MAAO,ICROC,GACfC,KAAM,GACNC,YAAY,EACZC,cAAc,GAGHC,EAAuBC,YAChC,gCADgD,uCAEhD,WAAOC,EAAP,0BAAAC,EAAA,6DAAiBC,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,SAC1BD,EAASE,GAAa,IACtBF,EAASG,GAAc,IACjBC,EAAe,CACpBX,KAAMQ,IAAWjB,cAAcA,eAJjC,kBAO4BN,EAAI2B,KAAK,0BAA2BD,GAPhE,gBAOaX,EAPb,EAOaA,KACRO,EAASM,EAAQb,EAAKc,WAR3B,kDAUQP,EAASE,GAAa,IAV9B,yBAYKF,EAASG,GAAc,IAZ5B,6EAFgD,yDAmB9CnB,EAAgBwB,YAAY,CAC/BC,KAAM,gBACN1B,eACA2B,SAAU,CACRC,iBADQ,SACSC,EAAOC,GACvBD,EAAM5B,cAAgB6B,EAAOf,SAE9BQ,QAJQ,SAIAM,EAAOC,GACdD,EAAMnB,KAAOoB,EAAOf,SAErBK,cAPQ,SAOMS,EAAOC,GACpBD,EAAMlB,WAAamB,EAAOf,SAE3BI,aAVQ,SAUKU,EAAOC,GACnBD,EAAMjB,aAAekB,EAAOf,YAK3B,EAKHd,EAAc8B,QAJjBH,EADM,EACNA,iBACAL,EAFM,EAENA,QACAH,EAHM,EAGNA,cACAD,EAJM,EAINA,aAEclB,IAAf,QC/CM+B,EAAcP,YAAY,CAC7BC,KAAM,cACN1B,aATkB,CACjBiC,UAAU,EACVC,QAAS,IAQVP,SAAU,CACLQ,eADK,SACUN,EAAOC,GAClBD,EAAMI,SAAWH,EAAOf,SAE5BqB,WAJK,SAIMP,EAAOC,GACdD,EAAMK,QAAUJ,EAAOf,YAK5B,EAGHiB,EAAYD,QAFZI,EADG,EACHA,eACAC,EAFG,EAEHA,WAEWJ,IAAf,QChBaK,EAAgBvB,YAC1B,yBAD0C,uCAE1C,WAAOwB,EAAP,sBAAAtB,EAAA,6DAAgBC,EAAhB,EAAgBA,UACNG,GAAc,IADxB,kBAG0BzB,EAAI4C,IAAI,oBAHlC,gBAGW7B,EAHX,EAGWA,KACRO,EAASM,EAAQb,EAAKc,WAJzB,kDAMGP,EAASE,GAAa,IANzB,yBAQGF,EAASG,GAAc,IACrBH,EAASuB,GAAW,IATzB,6EAF0C,yDAkBvChB,EAAWC,YAAY,CAC1BC,KAAM,WACN1B,aA3BkB,CACnBU,KAAM,GACNC,YAAY,EACZC,cAAc,EACd6B,SAAS,GAwBRd,SAAU,CACRJ,QADQ,SACAM,EAAOC,GACdD,EAAMnB,KAAOoB,EAAOf,SAErBK,cAJQ,SAIMS,EAAOC,GACpBD,EAAMlB,WAAamB,EAAOf,SAE3BI,aAPQ,SAOKU,EAAOC,GACnBD,EAAMjB,aAAekB,EAAOf,SAE7ByB,WAVQ,SAUGX,EAAOC,GACjBD,EAAMY,QAAUX,EAAOf,UAG1B2B,cAAe,KAIX,EAKHlB,EAASO,QAJZR,EADM,EACNA,QACAH,EAFM,EAENA,cACAD,EAHM,EAGNA,aACAqB,EAJM,EAINA,WAEchB,IAAf,QCzCamB,EAAoB7B,YAC7B,yBAD6C,uCAE7C,WAAO8B,EAAP,4BAAA5B,EAAA,6DAAYC,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,SACZf,EAAS,CACX+B,QAAS,IAEbjB,EAAS4B,GAAa,IAJ1B,SAMchB,EAAQX,IACRjB,EAPd,eAOkC4B,EAAM5B,cAAcA,eACxC6C,EAAMjB,EAAMkB,cAAcC,gBAC7B/C,EAAc6C,YACN7C,EAAc6C,GACrB7B,EAASW,EAAiB3B,KAXtC,UAacN,EAAIsD,OAAO,wBAAyB,CAACvC,KAAM,CAACoC,SAb1D,QAcQ3C,EAAO+B,QAAU,wFAdzB,kDAgBQ/B,EAAO+B,QAAU,0IAhBzB,yBAkBQjB,EAASiC,EAAsB/C,EAAO+B,UACtCjB,EAASkC,GAAqB,IAC9BlC,EAASmC,GAAiB,IAC1BnC,EAASoC,EAAmB,OAC5BpC,EAAS4B,GAAa,IACtB5B,EAASkB,GAAe,IACxBlB,EAASuB,GAAW,IAxB5B,6EAF6C,yDAiC3CO,EAAgBtB,YAAY,CAC/BC,KAAM,gBACN1B,aA3CkB,CACjBsD,eAAe,EACfC,eAAe,EACfC,WAAW,EACXR,gBAAiB,MAwClBrB,SAAU,CACLQ,eADK,SACUN,EAAOC,GAClBD,EAAMyB,cAAgBxB,EAAOf,SAEpCqC,iBAJQ,SAISvB,EAAOC,GACjBD,EAAM0B,cAAgBzB,EAAOf,SAEjC8B,aAPK,SAOQhB,EAAOC,GAChBD,EAAM2B,UAAY1B,EAAOf,SAE7BsC,mBAVK,SAUcxB,EAAOC,GACtBD,EAAMmB,gBAAkBlB,EAAOf,UAGxC2B,cAAe,KAIX,EAKHK,EAAchB,QAJdI,EADG,EACHA,eACHiB,EAFM,EAENA,iBACGP,EAHG,EAGHA,aACAQ,EAJG,EAIHA,mBAEWN,IAAf,Q,OCnEMU,EAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACf,EAAsBC,mBAASD,EAAKE,KAApC,mBAAOA,EAAP,KAAYC,EAAZ,KACA,EAA4BF,mBAASC,EAAIE,OAAzC,mBAAOC,EAAP,KAAeC,EAAf,KACM/C,EAAWgD,cACXpC,EAAQqC,aAAY,SAAArC,GACzB,OAAOA,EAAM5B,iBAyBd,OACC,qBAAKkE,UAAU,2CAAf,SACC,sBAAKA,UAAU,OAAOC,MAAO,CAACC,MAAO,SAArC,UACC,qBAAKC,QARY,WACnBT,EAAO,8CACPG,EAAU,uOAMmBO,IAAKX,EAAKY,IAAKT,EAAQI,UAAU,iBAC5D,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BT,EAAKI,QACjC,mBAAGK,UAAU,YAAb,SAA0BT,EAAKe,cAC/B,wBAAQN,UAAU,kCAAkCO,QA5BnC,WACvB,IAAMC,EAAI,eAAO9C,EAAM5B,eACpB0E,EAAKjB,EAAKZ,aACL6B,EAAKjB,EAAKZ,KACjB7B,EAASW,EAAiB+C,MAE1BA,EAAKjB,EAAKZ,KAAO,EACjB7B,EAASW,EAAiB+C,MAqBrB,SAA8E,qBAAKJ,IAAI,0DAA0DH,MAAO,CACvJC,MAAO,GACPO,OAAQ,QAEP,wBAAQT,UAAU,kCAAkCO,QArBvC,WACrBzD,EAASoC,EAAmBK,EAAKZ,MACjC7B,EAASkB,GAAe,KAmBhB,SAA4E,qBAAKoC,IAAI,4DAA4DH,MAAO,CACzJC,MAAO,GACPO,OAAQ,iBAQFC,iBAAKpB,GCxCLqB,EAhBE,WAChB,OACC,qBAAKX,UAAU,2DAAf,SACC,sBAAKA,UAAU,OAAOC,MAAO,CAACC,MAAO,SAArC,UACC,qBAAKE,IAAI,+EAA+EJ,UAAU,gCAClG,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,gFACA,mBAAGA,UAAU,YAAb,wXCGOY,EAVQ,SAAC,GAAiB,IAAf7C,EAAc,EAAdA,QAEzB,OACC,qBAAKiC,UAAU,kBAAf,SACC,oBAAIA,UAAU,iBAAd,SAAgCjC,OC2CpB8C,EAzCE,WAChB,IAAM/D,EAAWgD,cACXpC,EAAQqC,aAAY,SAAArC,GACzB,OAAOA,EAAML,YAEdyD,IAAMC,WAAU,WACfjE,EAASoB,OACP,IACH4C,IAAMC,WAAU,WACZrD,EAAMY,SACRxB,EAASoB,OAER,CAACR,EAAMY,UAmBV,OACC,qCACC,qGACA,qBAAK0B,UAAU,iCAAf,SAnBEtC,EAAMlB,WACLkB,EAAMjB,aACD,cAAC,EAAD,CAAgBsB,QAAQ,uQAE7BL,EAAMnB,KAAKyE,OACNtD,EAAMnB,KAAK0E,KAAI,SAAAC,GACrB,OAAO,cAAC,EAAD,CAAM3B,KAAM2B,GAAWA,EAAKvC,QAG9B,cAAC,EAAD,CAAgBZ,QAAQ,oFAExBoD,MAAM,IAAIC,KAAK,GAAGH,KAAI,SAACC,EAAMG,GACnC,OAAO,cAAC,EAAD,GAAeA,YCaXC,EAtCW,WACzB,IAAMxE,EAAWgD,cACXpC,EAAQqC,aAAY,SAAArC,GAAK,OAAIA,EAAM5B,iBAEzCgF,IAAMC,WAAU,WTOD,IAACnE,ESNfE,EAASJ,KTMME,ESLPc,EAAM5B,cTMfG,aAAasF,QAAQ3F,EAAiBO,KAAKqF,UAAU5E,MSLlD,CAACc,EAAM5B,gBAqBV,OACC,qCACC,6HACA,qBAAKkE,UAAU,WAAf,SApBEtC,EAAMlB,WACLkB,EAAMjB,aACD,cAAC,EAAD,CAAgBsB,QAAQ,4IAE7BL,EAAMnB,KAAKyE,OACNtD,EAAMnB,KAAK0E,KAAI,SAAAC,GACrB,OAAO,cAAC,EAAD,CAAM3B,KAAM2B,GAAWA,EAAKvC,QAG9B,cAAC,EAAD,CAAgBZ,QAAQ,+HAExBoD,MAAM,IAAIC,KAAK,GAAGH,KAAI,SAACC,EAAMG,GACnC,OAAO,cAAC,EAAD,GAAeA,Y,wCCdXI,GAjBD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAUC,EAAY,mBACtC,EAAsBC,aAASD,GAA/B,mBAAOE,EAAP,KAAcC,EAAd,KAEA,OACC,sBAAK9B,UAAU,kBAAf,UACI,gCAAQ0B,IACR,+CACCK,KAAK,OACL/B,UAAU,gBACN6B,GACAF,IAEJG,EAAKE,SAAWF,EAAKG,OAAS,sBAAMjC,UAAU,uBAAhB,SAAwC8B,EAAKG,YCJrEC,GAAavF,YACtB,kBADsC,uCAEtC,WAAOC,EAAP,oBAAAC,EAAA,6DAAiBC,EAAjB,EAAiBA,SAAjB,EAA2BC,SAC1BD,EAASqF,IAAW,IACdnG,EAAS,CACd+B,QAAS,IAHX,kBAMWvC,EAAI2B,KAAK,mBAAoBP,GANxC,OAOKZ,EAAO+B,QAAU,yIAPtB,gDASQ/B,EAAO+B,QAAU,0IATzB,yBAWKjB,EAASuB,GAAW,IACpBvB,EAASmB,GAAWjC,EAAO+B,UAC3BjB,EAASqF,IAAW,IAbzB,4EAFsC,yDAoBpCC,GAAO9E,YAAY,CACtBC,KAAM,OACN1B,aA3BkB,CACnBwD,WAAW,EACXtB,QAAS,IA0BRP,SAAU,CACR2E,WADQ,SACGzE,EAAOC,GACjBD,EAAM2B,UAAY1B,EAAOf,SAE1BqB,WAJQ,SAIGP,EAAOC,GACjBD,EAAMK,QAAUJ,EAAOf,YAKtB,GAGHwF,GAAKxE,QAFRuE,GADM,GACNA,WACAlE,GAFM,GAENA,WAEcmE,MAAf,QCSeC,GA/CQ,WACtB,IAAMvF,EAAWgD,cACXwC,EAAYvC,aAAY,SAAArC,GAAK,OAAIA,EAAM0E,QACvCG,EAAaC,KAAW,CAC7B7C,MAAO6C,OACLC,SAAS,kHACXnC,YAAakC,OACXC,SAAS,kHACXhD,IAAK+C,OACHC,SAAS,oHAGZ,OACC,sBAAKzC,UAAU,oBAAf,UACI,mIACH,cAAC,KAAD,CACC0C,cAAe,CACd/C,MAAO,GACPW,YAAa,GACbb,IAAK,IAENkD,iBAAkBJ,EAClBK,SAAU,SAACC,EAAQjF,GAClBd,EAASoF,GAAWW,IACpBjF,EAAQkF,aATV,SAYE,gBAAEC,EAAF,EAAEA,aAAF,OACA,uBAAMH,SAAUG,EAAc/C,UAAU,oBAAxC,UACC,qBAAKA,UAAS,4DAAuDsC,EAAUjD,UAAY,SAAW,IAAtG,SACC,qBAAKe,IAAI,uDAAuDH,MAAO,CACtEC,MAAO,GACPO,OAAQ,IACNT,UAAU,mBAEd,cAAC,GAAD,CAAOzC,KAAK,QAAQmE,MAAM,wEAC1B,cAAC,GAAD,CAAOnE,KAAK,cAAcmE,MAAM,sGAChC,cAAC,GAAD,CAAOnE,KAAK,MAAMmE,MAAM,0KACvBY,EAAUvE,SAAW,qBAAKiC,UAAU,aAAf,SAA4B,+BAAOsC,EAAUvE,YACnE,wBAAQgE,KAAK,SAAS/B,UAAU,uBAAhC,wEC1CAgD,GAAqB,WAC1B,IAAMlG,EAAWgD,cACXmD,EAAalD,aAAY,SAAArC,GAC9B,MAAO,CACNnB,KAAMmB,EAAML,SAASd,KACrBkC,GAAIf,EAAMkB,cAAcC,gBACxBf,SAAUJ,EAAMkB,cAAcO,cAC9BC,cAAe1B,EAAMkB,cAAcQ,cACnCC,UAAW3B,EAAMkB,cAAcS,cAIjC0B,qBAAU,WACNkC,EAAW7D,eACbtC,EAAS0B,OAER,CAACyE,EAAW7D,gBAEf,IAAMG,EAAO0D,EAAW1G,KAAK2G,MAAK,SAAAC,GAAE,OAAIA,EAAGxE,MAAQsE,EAAWxE,MACxDkB,EAAQJ,EAAOA,EAAKI,MAAQ,uCAWlC,OACC,sBAAKK,UAAS,gBAAWiD,EAAWnF,SAAW,SAAW,IAAMsF,SAAS,KAAKC,KAAK,SAAnF,UACC,qBAAKrD,UAAS,4DAAuDiD,EAAW5D,UAAY,SAAW,MACvG,qBAAKW,UAAU,eAAeqD,KAAK,WAAnC,SACI,sBAAKrD,UAAU,gBAAf,UACG,qBAAKA,UAAU,eAAf,SACE,oBAAIA,UAAU,cAAd,gEAEF,qBAAKA,UAAU,aAAf,SACE,+KAA+BL,EAA/B,UAEF,sBAAKK,UAAU,eAAf,UACE,wBAAQ+B,KAAK,SAAS/B,UAAU,kBAAkBO,QAhBhC,WAC5BzD,EAASmC,GAAiB,KAehB,wDACA,wBAAQ8C,KAAK,SAASxB,QArBd,WAClBzD,EAASkB,GAAe,KAoB6BgC,UAAU,oBAAoB,eAAa,QAAtF,oEASGU,kBAAKsC,IC9BLM,GAxBK,WACnB,IAAMxG,EAAWgD,cACXpC,EAAQqC,aAAY,SAAArC,GAAK,OAAIA,EAAMG,eAEzCiD,IAAMC,WAAU,WACZrD,EAAMI,UACRyF,MAEC,CAAC7F,EAAMI,WAEV,IAAMyF,EAAW,WAChBC,YAAW,WACV1G,EAASkB,GAAe,MACtB,MAIJ,OACC,qBAAKgC,UAAS,sBAAiBtC,EAAMI,SAAW,SAAW,GAA7C,qBAAd,SACC,+BAAOJ,EAAMK,aCFD0F,GAdH,WACR,OACI,qBAAKzD,UAAU,kBAAf,SACC,sBAAKA,UAAU,YAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACM,cAAC,GAAD,UCJD0D,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCiBCQ,GAXDC,YAAe,CAC5BC,QAAS,CACRvI,gBACAsG,QACA/E,WACAuB,gBACAf,eAEDyG,WAAW,aAAKC,iBCXXC,GACL,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACC,cAAC,GAAD,MAKFM,IAASC,OACNF,GACAG,SAASC,eAAe,SAI3BlB,M","file":"static/js/main.85987827.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n\r\n\r\nconst api = axios.create({\r\n\tbaseURL: '/api'\r\n});\r\n\r\n\r\nexport default api;","\r\n\r\nconst localStorageKey = 'favouriteList';\r\n\r\nconst getByKey = (key) => {\r\n\tconst result = localStorage.getItem(localStorageKey);\r\n\tif(result){\r\n\t\ttry {\r\n\t\t\ttry {\r\n\t\t\t\tconst json = JSON.parse(result);\r\n\t\t\t\treturn json;\r\n\t\t\t} catch(e) {\r\n\t\t\t\treturn {}\r\n\t\t\t}\r\n\t\t} catch(e) {\r\n\t\t\treturn {}\r\n\t\t}\r\n\t}else {\r\n\t\treturn {}\r\n\t}\r\n}\r\n\r\nconst setToLS = (payload) => {\r\n\tlocalStorage.setItem(localStorageKey, JSON.stringify(payload));\r\n}\r\n\r\nconst checkLength = (obj) => {\r\n\tlet index = 0;\r\n\tfor(let i in obj){\r\n\t\tif(obj.hasOwnProperty(i)){\r\n\t\t\tindex++;\r\n\t\t}\r\n\t}\r\n\treturn index;\r\n}\r\n\r\n\r\nexport {\r\n\tgetByKey,\r\n\tsetToLS,\r\n\tcheckLength\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nimport api from '../../http/api';\r\n\r\n\r\nimport { getByKey } from '../../utils/locaStorage';\r\nconst initialState = {\r\n \tfavouriteList: getByKey(),\r\n \tdata: [],\r\n \tdataLoaded: false, \r\n \tdataHasError: false,\r\n}\r\n\r\nexport const fetchToFavouriteList = createAsyncThunk(\r\n    'pokemons/fetchToFavouriteList',\r\n    async (payload, {dispatch, getState}) => {\r\n    \tdispatch(setDataError(false));\r\n    \tdispatch(setDataLoaded(false));\r\n    \tconst responseData = {\r\n    \t\tdata: getState().favouriteList.favouriteList\r\n    \t}\r\n        try {\r\n        \tconst { data } = await api.post('/pokemon/group-pokemons', responseData);\r\n        \tdispatch(setData(data.pokemons));\r\n        } catch(e) {\r\n            dispatch(setDataError(true));\r\n        } finally {\r\n        \tdispatch(setDataLoaded(true));\r\n        }\r\n    }\r\n)\r\n\r\nconst favouriteList = createSlice({\r\n  \tname: 'favouriteList',\r\n  \tinitialState,\r\n  \treducers: {\r\n\t    setFavouriteList(state, action){\r\n\t    \tstate.favouriteList = action.payload;\r\n\t    },\r\n\t    setData(state, action){\r\n\t    \tstate.data = action.payload;\r\n\t    },\r\n\t    setDataLoaded(state, action){\r\n\t    \tstate.dataLoaded = action.payload;\r\n\t    },\r\n\t    setDataError(state, action){\r\n\t    \tstate.dataHasError = action.payload;\r\n\t    }\r\n  \t},\r\n})\r\n\r\nexport const {\r\n\tsetFavouriteList,\r\n\tsetData,\r\n\tsetDataLoaded,\r\n\tsetDataError\r\n} = favouriteList.actions\r\nexport default favouriteList.reducer;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nconst initialState = {\r\n    isActive: false,\r\n    message: \"\"\r\n}\r\n\r\n\r\n\r\nconst simpleModal = createSlice({\r\n  \tname: 'simpleModal',\r\n  \tinitialState,\r\n  \treducers: {\r\n        setModalActive(state, action){\r\n            state.isActive = action.payload\r\n        },\r\n        setMessage(state, action){\r\n            state.message = action.payload\r\n        }\r\n  \t},\r\n})\r\n\r\nexport const {\r\n    setModalActive,\r\n    setMessage\r\n} = simpleModal.actions\r\nexport default simpleModal.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nimport api from '../../http/api';\r\n\r\nconst initialState = {\r\n \tdata: [],\r\n \tdataLoaded: false, \r\n \tdataHasError: false,\r\n \trefetch: false,\r\n}\r\n\r\nexport const fetchPokemons = createAsyncThunk(\r\n  \t'pokemons/fetchPokemons',\r\n  \tasync (userId, {dispatch}) => {\r\n  \t\tdispatch(setDataLoaded(false));\r\n    \ttry {\r\n    \t\tconst { data } = await api.get('/pokemon/get-all');\r\n    \t\tdispatch(setData(data.pokemons));\r\n    \t} catch(e) {\r\n    \t\tdispatch(setDataError(true));\r\n    \t} finally{\r\n    \t\tdispatch(setDataLoaded(true));\r\n        dispatch(setRefetch(false));\r\n    \t}\r\n  \t}\r\n)\r\n\r\n\r\n\r\nconst pokemons = createSlice({\r\n  \tname: 'pokemons',\r\n  \tinitialState,\r\n  \treducers: {\r\n\t    setData(state, action){\r\n\t    \tstate.data = action.payload;\r\n\t    },\r\n\t    setDataLoaded(state, action){\r\n\t    \tstate.dataLoaded = action.payload;\r\n\t    },\r\n\t    setDataError(state, action){\r\n\t    \tstate.dataHasError = action.payload;\r\n\t    },\r\n\t    setRefetch(state, action){\r\n\t    \tstate.refetch = action.payload\r\n\t    }\r\n  \t},\r\n  \textraReducers: {\r\n  \t}\r\n})\r\n\r\nexport const {\r\n\tsetData,\r\n\tsetDataLoaded,\r\n\tsetDataError,\r\n\tsetRefetch\r\n} = pokemons.actions\r\nexport default pokemons.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nimport api from '../../http/api';\r\nimport { setModalActive as setSimpleModalActive, setMessage as setSimpleModalMessage } from './simpleModal';\r\nimport { setRefetch } from './pokemons';\r\nimport { setFavouriteList } from './favouriteList';\r\n\r\nconst initialState = {\r\n    modalIsActive: false,\r\n    confirmDelete: false,\r\n    isLoading: false,\r\n    deletePokemonId: null,\r\n}\r\n\r\n\r\nexport const deletePokemonById = createAsyncThunk(\r\n    'pokemons/deletePokemon',\r\n    async (id, {dispatch, getState}) => {\r\n        const result = {\r\n            message: \"\"\r\n        }\r\n        dispatch(setIsLoading(true));\r\n        try {\r\n            const state = getState();\r\n            const favouriteList = {...state.favouriteList.favouriteList};\r\n            const _id = state.deletePokemon.deletePokemonId;\r\n            if(favouriteList[_id]){\r\n                delete favouriteList[_id];\r\n                dispatch(setFavouriteList(favouriteList));\r\n            }\r\n            await api.delete('/pokemon/delete-by-id', {data: {_id}});\r\n            result.message = 'Успешно удалено';\r\n        } catch(e) {\r\n            result.message = 'Произошла какая то ошибка';\r\n        } finally{\r\n            dispatch(setSimpleModalMessage(result.message));\r\n            dispatch(setSimpleModalActive(true));\r\n            dispatch(setConfirmDelete(false));\r\n            dispatch(setDeletePokemonId(null));\r\n            dispatch(setIsLoading(false));\r\n            dispatch(setModalActive(false));\r\n            dispatch(setRefetch(true));\r\n        }\r\n    }\r\n)\r\n\r\n\r\n\r\nconst deletePokemon = createSlice({\r\n  \tname: 'deletePokemon',\r\n  \tinitialState,\r\n  \treducers: {\r\n        setModalActive(state, action){\r\n            state.modalIsActive = action.payload\r\n        },\r\n\t    setConfirmDelete(state, action){\r\n            state.confirmDelete = action.payload;\r\n        },\r\n        setIsLoading(state, action){\r\n            state.isLoading = action.payload;\r\n        },\r\n        setDeletePokemonId(state, action){\r\n            state.deletePokemonId = action.payload;\r\n        },\r\n  \t},\r\n  \textraReducers: {\r\n  \t}\r\n})\r\n\r\nexport const {\r\n    setModalActive,\r\n\tsetConfirmDelete,\r\n    setIsLoading,\r\n    setDeletePokemonId,\r\n} = deletePokemon.actions\r\nexport default deletePokemon.reducer;","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useState, memo } from 'react';\r\n\r\n\r\nimport { setFavouriteList } from '../../redux/reducers/favouriteList';\r\nimport { setModalActive, setDeletePokemonId } from '../../redux/reducers/deletePokemon';\r\n\r\n\r\nconst Card = ({ item }) => {\r\n\tconst [img, setImg] = useState(item.img);\r\n\tconst [imgAlt, setImgAlt] = useState(img.title);\r\n\tconst dispatch = useDispatch();\r\n\tconst state = useSelector(state => {\r\n\t\treturn state.favouriteList;\r\n\t});\r\n\r\n\r\n\tconst favouriteChange = () => {\r\n\t\tconst list = {...state.favouriteList}\r\n\t\tif(list[item._id]){\r\n\t\t\tdelete list[item._id];\r\n\t\t\tdispatch(setFavouriteList(list));\r\n\t\t}else {\r\n\t\t\tlist[item._id] = 1;\r\n\t\t\tdispatch(setFavouriteList(list));\r\n\t\t}\r\n\t}\r\n\r\n\tconst deletePokemon = () => {\r\n\t\tdispatch(setDeletePokemonId(item._id));\r\n\t\tdispatch(setModalActive(true));\r\n\t}\r\n\r\n\tconst setErrorImg = () => {\r\n\t\tsetImg(\"https://img.icons8.com/small/452/error.png\");\r\n\t\tsetImgAlt(\"Произошла ошибка при загрузки изображении\");\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"col-4 d-flex justify-content-center mb-2\">\r\n\t\t\t<div className=\"card\" style={{width: '18rem'}}>\r\n\t\t\t\t<img onError={setErrorImg} src={img} alt={imgAlt} className=\"card-img-top\" />\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t    <h5 className=\"card-title\">{item.title}</h5>\r\n\t\t\t\t    <p className=\"card-text\">{item.description}</p>\r\n\t\t\t\t    <button className=\"border-0 p-2 m-1 rounded-circle\" onClick={favouriteChange}><img src=\"https://image.flaticon.com/icons/png/512/263/263417.png\" style={{\r\n\t\t\t\t    \twidth: 25,\r\n\t\t\t\t    \theight: 25\r\n\t\t\t\t    }}/></button>\r\n      \t\t\t\t<button className=\"border-0 p-2 m-1 rounded-circle\" onClick={deletePokemon}><img src=\"https://image.flaticon.com/icons/png/512/3221/3221897.png\" style={{\r\n\t\t\t\t    \twidth: 25,\r\n\t\t\t\t    \theight: 25\r\n\t\t\t\t    }}/></button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default memo(Card);","\r\n\r\n\r\nconst CardLoad = () => {\r\n\treturn (\r\n\t\t<div className=\"cardItemLoading col-4 d-flex justify-content-center mb-2\">\r\n\t\t\t<div className=\"card\" style={{width: '18rem'}}>\r\n\t\t\t\t<img src=\"https://i.pinimg.com/originals/a3/41/9e/a3419eab3dc80c75e4024ca22fc64734.jpg\" className=\"rounded-circle card-img-top\" />\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t    <h5 className=\"card-title\">Загружается</h5>\r\n\t\t\t\t    <p className=\"card-text\">\r\n\t\t\t\t    \tLorem, ipsum dolor sit amet consectetur adipisicing elit. Quidem culpa adipisci temporibus molestiae autem quas praesentium. Quidem aspernatur minima exercitationem velit harum quaerat quod commodi est vel voluptates? Repellat aut quasi, ratione molestias inventore doloremque repellendus dolorum non culpa, sunt quaerat, debitis labore enim architecto.\r\n\t\t\t\t    </p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CardLoad;","\r\n\r\n\r\nconst CardOutMessage = ({ message }) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"w-100 py-3 px-2\">\r\n\t\t\t<h4 className=\"text-uppercase\">{message}</h4>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default CardOutMessage;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nimport Card from './card/item';\r\nimport CardLoad from './card/loadItem';\r\nimport CardOutMessage from './cardOutMessage';\r\nimport { fetchPokemons } from '../redux/reducers/pokemons';\r\n\r\nconst Pokemons = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst state = useSelector(state => {\r\n\t\treturn state.pokemons\r\n\t})\r\n\tReact.useEffect(() => {\r\n\t\tdispatch(fetchPokemons());\r\n\t}, []);\r\n\tReact.useEffect(() => {\r\n\t\tif(state.refetch){\r\n\t\t\tdispatch(fetchPokemons());\r\n\t\t}\r\n\t}, [state.refetch]);\r\n\r\n\tconst outCards = () => {\r\n\t\tif(state.dataLoaded){\r\n\t\t\tif(state.dataHasError){\r\n\t\t\t\treturn <CardOutMessage message=\"Произошла какая то ошибка при загрузки покемонов\" />\r\n\t\t\t}\r\n\t\t\tif(state.data.length){\r\n\t\t\t\treturn state.data.map(elem => {\r\n\t\t\t\t\treturn <Card item={elem} key={elem._id} />\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn <CardOutMessage message=\"Покемонов нету\" />\r\n\t\t}else {\r\n\t\t\treturn Array(10).fill(0).map((elem, i) => {\r\n\t\t\t\treturn <CardLoad key={i} />\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Все покемоны</h2>\r\n\t\t\t<div className=\"row py-4 justify-content-start\">\r\n\t\t\t\t{outCards()}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Pokemons;","import { useDispatch, useSelector } from 'react-redux';\r\nimport React from 'react';\r\n\r\n\r\nimport Card from './card/item';\r\nimport CardLoad from './card/loadItem';\r\nimport CardOutMessage from './cardOutMessage';\r\nimport { fetchToFavouriteList } from '../redux/reducers/favouriteList';\r\nimport { setToLS } from '../utils/locaStorage';\r\n\r\n\r\nconst FavouritePokemons = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst state = useSelector(state => state.favouriteList);\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tdispatch(fetchToFavouriteList());\r\n\t\tsetToLS(state.favouriteList);\r\n\t}, [state.favouriteList]);\r\n\r\n\r\n\tconst outCards = () => {\r\n\t\tif(state.dataLoaded){\r\n\t\t\tif(state.dataHasError){\r\n\t\t\t\treturn <CardOutMessage message=\"Произошла какая то ошибка\" />\r\n\t\t\t}\r\n\t\t\tif(state.data.length){\r\n\t\t\t\treturn state.data.map(elem => {\r\n\t\t\t\t\treturn <Card item={elem} key={elem._id} />\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn <CardOutMessage message=\"Нету любимых покемонов\" />\r\n\t\t}else {\r\n\t\t\treturn Array(10).fill(0).map((elem, i) => {\r\n\t\t\t\treturn <CardLoad key={i} />\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Любимые покемоны</h2>\r\n\t\t\t<div className=\"row py-4\">\r\n\t\t\t\t{outCards()}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default FavouritePokemons;","import { useField } from 'formik';\r\n\r\n\r\nconst Input = ({ label, ...props }) => {\r\n\tconst [field, meta] = useField(props);\r\n\r\n\treturn (\r\n\t\t<div className=\"form-group my-4\">\r\n    \t\t<label>{label}</label>\r\n    \t\t<input \r\n    \t\t\ttype=\"text\"\r\n    \t\t\tclassName=\"form-control\"\r\n    \t\t\t{...field}\r\n    \t\t\t{...props}\r\n    \t\t/>\r\n    \t\t{meta.touched && meta.error && <span className=\"form-text text-muted\">{meta.error}</span>}\r\n  \t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Input;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nimport { setRefetch } from './pokemons';\r\nimport api from '../../http/api';\r\n\r\n\r\nconst initialState = {\r\n \tisLoading: false,\r\n \tmessage: \"\"\r\n}\r\n\r\nexport const addPokemon = createAsyncThunk(\r\n    'form/addPokemon',\r\n    async (payload, {dispatch, getState}) => {\r\n    \tdispatch(setLoading(true));\r\n    \tconst result = {\r\n    \t\tmessage: \"\"\r\n    \t}\r\n        try {\r\n        \tawait api.post('/pokemon/add-new', payload);\r\n        \tresult.message = \"Покемон успешно добавлен\";\r\n        } catch(e) {\r\n            result.message = \"Произошла какая то ошибка\";\r\n        } finally {\r\n        \tdispatch(setRefetch(true));\r\n        \tdispatch(setMessage(result.message));\r\n        \tdispatch(setLoading(false));\r\n        }\r\n    }\r\n)\r\n\r\nconst form = createSlice({\r\n  \tname: 'form',\r\n  \tinitialState,\r\n  \treducers: {\r\n\t    setLoading(state, action){\r\n\t    \tstate.isLoading = action.payload;\r\n\t    },\r\n\t    setMessage(state, action){\r\n\t    \tstate.message = action.payload;\r\n\t    }\r\n  \t},\r\n})\r\n\r\nexport const {\r\n\tsetLoading,\r\n\tsetMessage\r\n} = form.actions\r\nexport default form.reducer;","import { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nimport Input from './input.js';\r\n\r\nimport { addPokemon } from '../redux/reducers/form';\r\n\r\n\r\nconst AddPokemonForm = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst formState = useSelector(state => state.form);\r\n\tconst validation = Yup.object({\r\n\t\ttitle: Yup.string()\r\n\t\t\t.required(\"Это поле обязательна\"),\r\n\t\tdescription: Yup.string()\r\n\t\t\t.required(\"Это поле обязательна\"),\r\n\t\timg: Yup.string()\r\n\t\t\t.required(\"Это поле обязательна\")\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className=\"d-block py-3 px-2\">\r\n\t\t    <h3>Добавьте покемона</h3>\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\ttitle: \"\",\r\n\t\t\t\t\tdescription: \"\",\r\n\t\t\t\t\timg: \"\"\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={validation}\r\n\t\t\t\tonSubmit={(values, actions) => {\r\n\t\t\t\t\tdispatch(addPokemon(values));\r\n\t\t\t\t\tactions.resetForm();\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{({handleSubmit}) => (\r\n\t\t\t\t\t<form onSubmit={handleSubmit} className=\"position-relative\">\r\n\t\t\t\t\t\t<div className={`loading justify-content-center align-items-center ${formState.isLoading ? \"active\" : \"\"}`}>\r\n\t\t\t\t\t\t\t<img src=\"http://simpleicon.com/wp-content/uploads/loading.png\" style={{\r\n\t\t\t\t\t\t\t\twidth: 45,\r\n\t\t\t\t\t\t\t\theight: 45\r\n\t\t\t\t\t\t\t}} className=\"loading-icon\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Input name=\"title\" label=\"Имя покемона\" />\r\n\t\t\t\t\t\t<Input name=\"description\" label=\"Описание покемона\" />\r\n\t\t\t\t\t\t<Input name=\"img\" label=\"Ссылка на изображение покемона\" />\r\n\t\t\t\t\t\t{formState.message && <div className=\"form-group\"><span>{formState.message}</span></div>}\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary mt-1\">Добавить</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AddPokemonForm;","import { useDispatch, useSelector } from 'react-redux';\r\nimport { memo, useEffect } from 'react';\r\n\r\n\r\nimport { setModalActive, setConfirmDelete, deletePokemonById } from '../redux/reducers/deletePokemon';\r\n\r\n\r\nconst ConfirmDeleteModal = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst modalState = useSelector(state => {\r\n\t\treturn {\r\n\t\t\tdata: state.pokemons.data,\r\n\t\t\tid: state.deletePokemon.deletePokemonId,\r\n\t\t\tisActive: state.deletePokemon.modalIsActive,\r\n\t\t\tconfirmDelete: state.deletePokemon.confirmDelete,\r\n\t\t\tisLoading: state.deletePokemon.isLoading\r\n\t\t}\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif(modalState.confirmDelete){\r\n\t\t\tdispatch(deletePokemonById());\r\n\t\t}\r\n\t}, [modalState.confirmDelete]);\r\n\r\n\tconst item = modalState.data.find(el => el._id === modalState.id);\r\n\tconst title = item ? item.title : \"Ничего\";\r\n\r\n\r\n\tconst closeModal = () => {\r\n\t\tdispatch(setModalActive(false));\r\n\t}\r\n\r\n\tconst fetchToDeletePokemon = () => {\r\n\t\tdispatch(setConfirmDelete(true));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={`modal ${modalState.isActive ? \"active\" : \"\"}`} tabIndex=\"-1\" role=\"dialog\">\r\n\t\t\t<div className={`loading justify-content-center align-items-center ${modalState.isLoading ? \"active\" : \"\"}`}/>\r\n\t\t\t<div className=\"modal-dialog\" role=\"document\">\r\n\t\t\t    <div className=\"modal-content\">\r\n\t\t\t      \t<div className=\"modal-header\">\r\n\t\t\t        \t<h5 className=\"modal-title\">Удаление</h5>\r\n\t\t\t      \t</div>\r\n\t\t\t      \t<div className=\"modal-body\">\r\n\t\t\t        \t<p>Вы хотите удалить покемона {title} ?</p>\r\n\t\t\t      \t</div>\r\n\t\t\t      \t<div className=\"modal-footer\">\r\n\t\t\t        \t<button type=\"button\" className=\"btn btn-primary\" onClick={fetchToDeletePokemon}>Удалить</button>\r\n\t\t\t        \t<button type=\"button\" onClick={closeModal} className=\"btn btn-secondary\" data-dismiss=\"modal\">Закрыть</button>\r\n\t\t\t      \t</div>\r\n\t\t\t    </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default memo(ConfirmDeleteModal);","import { useDispatch, useSelector } from 'react-redux';\r\nimport React from 'react';\r\n\r\nimport { setModalActive } from '../redux/reducers/simpleModal';\r\n\r\nconst SimpleModal = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst state = useSelector(state => state.simpleModal);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif(state.isActive){\r\n\t\t\toffModal();\r\n\t\t}\r\n\t}, [state.isActive]);\r\n\r\n\tconst offModal = () => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tdispatch(setModalActive(false));\r\n\t\t}, 4000);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className={`simpleModal ${state.isActive ? \"active\" : \"\"} py-3 px-3 border`}>\r\n\t\t\t<span>{state.message}</span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SimpleModal;","\nimport PokemonsOutBlock from './components/pokemonsOutBlock';\nimport FavouritePokemonsBlock from './components/favouritePokemonsBlock';\nimport AddPokemonForm from './components/addPokemonForm';\nimport ConfirmDeleteModal from './components/confirmDeleteModal';\nimport SimpleModal from './components/simpleModal';\n\n\nconst App = () => {\n    return (\n        <div className=\"container-fluid\">\n        \t<div className=\"container\">\n        \t\t<PokemonsOutBlock />\n        \t\t<FavouritePokemonsBlock />\n        \t\t<AddPokemonForm />\n        \t\t<ConfirmDeleteModal />\n                <SimpleModal />\n        \t</div>\n        </div>\n    )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore, getDefaultMiddleware  } from '@reduxjs/toolkit';\r\n\r\n\r\nimport favouriteList from './reducers/favouriteList';\r\nimport form from './reducers/form';\r\nimport pokemons from './reducers/pokemons';\r\nimport deletePokemon from './reducers/deletePokemon';\r\nimport simpleModal from './reducers/simpleModal';\r\n\r\n\r\n\r\n\r\n\r\nconst store = configureStore({\r\n\treducer: {\r\n\t\tfavouriteList,\r\n\t\tform,\r\n\t\tpokemons,\r\n\t\tdeletePokemon,\r\n\t\tsimpleModal\r\n\t},\r\n\tmiddleware: [...getDefaultMiddleware()]\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/reducer';\n\n\nconst app = (\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>\n)\n\n\nReactDOM.render(\n  \tapp,\n  \tdocument.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}